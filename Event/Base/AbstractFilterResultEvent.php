<?php
/**
 * Trivial.
 *
 * @copyright Krator (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Krator <kratord@hotmail.com>.
 * @link https://www.heroesofmightandmagic.es
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.2.0 (https://modulestudio.de).
 */

namespace Zikula\TrivialModule\Event\Base;

use Symfony\Component\EventDispatcher\Event;
use Zikula\TrivialModule\Entity\ResultEntity;

/**
 * Event base class for filtering result processing.
 */
class AbstractFilterResultEvent extends Event
{
    /**
     * @var ResultEntity Reference to treated entity instance.
     */
    protected $result;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    /**
     * FilterResultEvent constructor.
     *
     * @param ResultEntity $result Processed entity
     * @param array $entityChangeSet Change set for preUpdate events
     */
    public function __construct(ResultEntity $result, array $entityChangeSet = [])
    {
        $this->result = $result;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * Returns the entity.
     *
     * @return ResultEntity
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Returns the change set.
     *
     * @return array Entity change set
     */
    public function getEntityChangeSet()
    {
        return $this->entityChangeSet;
    }
}
